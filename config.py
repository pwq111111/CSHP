import argparse
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from data.get_data import *
from data.data_process import *

def get_args_imagenet():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data':get_data_imagenet}, type=str)
    parser.add_argument('--name', default='imagenet', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=500,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=500,type=int)
    parser.add_argument('--class_num',default=500,type=int)
    parser.add_argument('--class_min1',default=500,type=int)
    parser.add_argument('--class_max1',default=1000,type=int)
    parser.add_argument('--class_num1',default=500,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--batch_size',default=10,type=int)
    parser.add_argument('--test_batch_size',default=15,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=1,type=int)
    parser.add_argument('--epoch',default=1,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default='a photo of a ',type=str)
    parser.add_argument('--prompt_coop',default=' a ',type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--seed',default=33,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    # parser.add_argument('--random_num',default=1667,type=int)
    # parser.add_argument('--random_num1',default=1666,type=int)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/aircraft.txt',type=str)
    parser.add_argument('--learning_rate',default=0.017,type=float)
    parser.add_argument('--attention_num',default=8,type=int)

    args=parser.parse_args()
    return args

def get_args_air():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data':get_data_air}, type=str)
    parser.add_argument('--name', default='air', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=50,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=50,type=int)
    parser.add_argument('--class_num',default=50,type=int)
    parser.add_argument('--class_min1',default=50,type=int)
    parser.add_argument('--class_max1',default=100,type=int)
    parser.add_argument('--class_num1',default=50,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--batch_size',default=10,type=int)
    parser.add_argument('--test_batch_size',default=100,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=1,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--lunshu',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default='a type of aircraft, a photo of ',type=str)
    parser.add_argument('--prompt_coop',default=' a ',type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--seed',default=33,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    # parser.add_argument('--random_num',default=1667,type=int)
    # parser.add_argument('--random_num1',default=1666,type=int)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/aircraft.txt',type=str)
    parser.add_argument('--learning_rate',default=0.005,type=int)
    parser.add_argument('--attention_num',default=8,type=int)

    args=parser.parse_args()
    return args

def get_args_food101():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_food101}, type=str)
    parser.add_argument('--name', default='food101', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=50,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=50,type=int)
    parser.add_argument('--class_num',default=50,type=int)
    parser.add_argument('--class_min1',default=50,type=int)
    parser.add_argument('--class_max1',default=101,type=int)
    parser.add_argument('--class_num1',default=51,type=int)
    parser.add_argument('--shot_test',default=250,type=int)
    parser.add_argument('--shot_test1',default=250,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--seed',default=10,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--batch_size',default=10,type=int)
    parser.add_argument('--test_batch_size',default=80,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=4,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--lunshu',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default='a type of food, a photo of a ',type=str)
    parser.add_argument('--prompt_coop',default='a',type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/ablation/food101.txt',type=str)
    parser.add_argument('--random_num',default=12500,type=int)
    parser.add_argument('--random_num1',default=12750,type=int)
    parser.add_argument('--learning_rate',default=0.01,type=int)
    parser.add_argument('--attention_num',default=9,type=int)
    args=parser.parse_args()
    return args

def get_args_flower102():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_flower102}, type=str)
    parser.add_argument('--name', default='flower102', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=51,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=51,type=int)
    parser.add_argument('--class_num',default=51,type=int)
    parser.add_argument('--class_min1',default=51,type=int)
    parser.add_argument('--class_max1',default=102,type=int)
    parser.add_argument('--class_num1',default=51,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)

    parser.add_argument('--batch_size',default=10,type=int)
    parser.add_argument('--test_batch_size',default=100,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--val_shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=2,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--lunshu',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default='a,a type of flower, a photo of ',type=str)
    parser.add_argument('--prompt_coop',default='a',type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--seed',default=4023,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/flower.txt',type=str)
    # parser.add_argument('--random_num',default=2135,type=int)
    # parser.add_argument('--random_num1',default=2929,type=int)
    parser.add_argument('--learning_rate',default=0.0277,type=int)
    parser.add_argument('--attention_num',default=13,type=int)
    args=parser.parse_args()
    return args

def get_args_cars():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_cars}, type=str)
    parser.add_argument('--name', default='cars', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=98,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=98,type=int)
    parser.add_argument('--class_num',default=98,type=int)
    parser.add_argument('--class_min1',default=98,type=int)
    parser.add_argument('--class_max1',default=196,type=int)
    parser.add_argument('--class_num1',default=98,type=int)

    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--batch_size',default=8,type=int)
    parser.add_argument('--test_batch_size',default=60,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--val_shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=1,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--lunshu',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default=' a type of car, a picture of ',type=str)
    parser.add_argument('--prompt_coop',default='a',type=str)
    parser.add_argument('--hard_prompt_back',default=' .',type=str)
    parser.add_argument('--seed',default=4023,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/cars.txt',type=str)
    parser.add_argument('--learning_rate',default=0.0277,type=int)
    parser.add_argument('--attention_num',default=13,type=int)
    args=parser.parse_args()
    return args

def get_args_dtd():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_dtd}, type=str)
    parser.add_argument('--name', default='dtd', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=23,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=23,type=int)
    parser.add_argument('--class_num',default=23,type=int)
    parser.add_argument('--class_min1',default=23,type=int)
    parser.add_argument('--class_max1',default=47,type=int)
    parser.add_argument('--class_num1',default=24,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--seed',default=33,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--batch_size',default=8,type=int)
    parser.add_argument('--test_batch_size',default=100,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=1,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--lunshu',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default="a, a kind of ",type=str)
    parser.add_argument('--prompt_coop',default="a" ,type=str)
    parser.add_argument('--hard_prompt_back',default=' texture.',type=str)

    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/dtd.txt',type=str)
    parser.add_argument('--learning_rate',default=0.0277,type=int)
    parser.add_argument('--attention_num',default=13,type=int)
    args=parser.parse_args()
    return args

def get_args_cal():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_cal}, type=str)
    parser.add_argument('--name', default='cal', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=50,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=50,type=int)
    parser.add_argument('--class_num',default=50,type=int)
    parser.add_argument('--class_min1',default=50,type=int)
    parser.add_argument('--class_max1',default=100,type=int)
    parser.add_argument('--class_num1',default=50,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--seed',default=42,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--batch_size',default=8,type=int)
    parser.add_argument('--test_batch_size',default=50,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=4,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default="a kind of universal goods, a photo of a ",type=str)
    parser.add_argument('--prompt_coop',default="a" ,type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/ablation/caltech.txt',type=str)
    parser.add_argument('--learning_rate',default=0.01,type=int)
    parser.add_argument('--attention_num',default=12,type=int)
    parser.add_argument('--linear_neural_number', default=512, type=int)
    args=parser.parse_args()
    return args

def get_args_eur():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_eur}, type=str)
    parser.add_argument('--name', default='eur', type=str)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/ablation/eur.txt',type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=5,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=5,type=int)
    parser.add_argument('--class_num',default=5,type=int)
    parser.add_argument('--class_min1',default=5,type=int)
    parser.add_argument('--class_max1',default=10,type=int)
    parser.add_argument('--class_num1',default=5,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--batch_size',default=10,type=int)
    parser.add_argument('--test_batch_size',default=100,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=1,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--lunshu',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--seed',default=10,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)

    parser.add_argument('--hard_prompt_front',default="a satellite, geography, land photo, a photo of ",type=str)
    parser.add_argument('--prompt_coop',default=" a" ,type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--learning_rate',default= 0.099,type=int)
    parser.add_argument('--attention_num',default=10,type=int)

    args=parser.parse_args()
    return args

def get_args_pets():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_pets}, type=str)
    parser.add_argument('--name', default='pets', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=18,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=18,type=int)
    parser.add_argument('--class_num',default=18,type=int)
    parser.add_argument('--class_min1',default=18,type=int)
    parser.add_argument('--class_max1',default=37,type=int)
    parser.add_argument('--class_num1',default=19,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--seed',default=4023,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--batch_size',default=10,type=int)
    parser.add_argument('--test_batch_size',default=100,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=2,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default="a, a type of pet , a photo of a ",type=str)
    parser.add_argument('--prompt_coop',default="a, " ,type=str)
    parser.add_argument('--hard_prompt_back',default=' .',type=str)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/pets.txt',type=str)
    parser.add_argument('--learning_rate',default=0.0277,type=int)
    parser.add_argument('--attention_num',default=13,type=int)

    args=parser.parse_args()
    return args

def get_args_sun():
    parser = argparse.ArgumentParser()
    parser.add_argument('--data', default={'data': get_data_sun}, type=str)
    parser.add_argument('--name', default='sun', type=str)
    parser.add_argument('--class_min_train',default=0,type=int)
    parser.add_argument('--class_max_train',default=198,type=int)
    parser.add_argument('--class_min',default=0,type=int)
    parser.add_argument('--class_max',default=198,type=int)
    parser.add_argument('--class_num',default=198,type=int)
    parser.add_argument('--class_min1',default=198,type=int)
    parser.add_argument('--class_max1',default=397,type=int)
    parser.add_argument('--class_num1',default=199,type=int)
    parser.add_argument('--embedding_length',default=512,type=int)
    parser.add_argument('--token_length',default=77,type=int)
    parser.add_argument('--seed',default=4023,type=int)
    parser.add_argument('--seed_cpu',default=55,type=int)
    parser.add_argument('--seed_gpu',default=67,type=int)
    parser.add_argument('--batch_size',default=8,type=int)
    parser.add_argument('--test_batch_size',default=40,type=int)
    parser.add_argument('--shot',default=16,type=int)
    parser.add_argument('--prompt_length',default=4,type=int)
    parser.add_argument('--epoch',default=10,type=int)
    parser.add_argument('--prompt_position',default=1,type=int)
    parser.add_argument('--prompt_cls_length',default=1,type=int)
    parser.add_argument('--prompt_cls_position',default=1,type=int)
    parser.add_argument('--hard_prompt_front',default="a kind of scene, a photo of a ",type=str)
    parser.add_argument('--prompt_coop',default="a" ,type=str)
    parser.add_argument('--hard_prompt_back',default='.',type=str)
    parser.add_argument('--acc_file_name',default='C:/Users/86178/Desktop/论文/ablation/sun.txt',type=str)
    parser.add_argument('--learning_rate',default=0.01,type=float)
    parser.add_argument('--attention_num',default=10,type=int)
    args=parser.parse_args()
    return args

